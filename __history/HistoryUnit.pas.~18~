unit HistoryUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.DBGrids, Data.DB,
  Data.Win.ADODB, Vcl.ExtCtrls, Vcl.StdCtrls;

type
  THistory = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Query: TADOQuery;
    DBGrid1: TDBGrid;
    DataSource: TDataSource;
    Edit1: TEdit;
    Label1: TLabel;
    procedure ShowHistory;
    procedure Scale;
  private
    procedure GetData;
  public
    { Public declarations }
  end;

var
  History: THistory;

implementation

{$R *.dfm}

uses MenuUnit;

{ THistory }

procedure THistory.GetData;
begin
Query.Active:=false;

with Query.SQL do
  begin
  Clear;
  Add('SELECT Hist.Код_Операции, Hist.Фамилия, Hist.GOT, Список_Дисков.[Номер в каталоге], История.дата');
  Add('FROM Список_Дисков');
  Add('  INNER JOIN');
  Add('');
  Add('    (SELECT История.Код_Операции, [Члены труппы].[Табельный номер], [Члены труппы].Фамилия, [Операции]![Операция] & [ТаблицаПолА]![Значение] AS GOT, История.дата, История.диск');
  Add('     FROM ТаблицаПолА');
  Add('       INNER JOIN (Операции');
  Add('         INNER JOIN ([Члены труппы]');
  Add('           INNER JOIN История');
  Add('           ON [Члены труппы].[Табельный номер] = История.Член_Труппы)');
  Add('         ON Операции.Код_Операции = История.Операция)');
  Add('       ON ТаблицаПолА.Код = [Члены труппы].Пол) AS Hist');
  Add('');
  Add('  ON Список_Дисков.ID_Диска = Hist.диск');
  Add('ORDER BY История.Код_Операции;');
  end;



Query.Active:=true;
Scale;
end;

procedure THistory.Scale;
var
  I: Integer;
const
  NRow = 5;
  GridColNames: array [0..NRow-1] of string = ('','Член труппы','Операция','Диск','Дата');
  GridColWith: array [0..NRow-1] of integer = (0,200,140,80,200);
begin
for I := 0 to NRow-1 do
  begin
  DBGrid1.Columns[i].Title.Caption:=GridColNames[i];   // Изменение заголовков
  DBGrid1.Columns[i].Width:=GridColWith[i];            // и размеров.
  DBGrid1.Columns[i].ReadOnly:=true;                   // запрещаем изменять значения для всех.
  end;
end;

procedure THistory.ShowHistory;
begin
GetData;
ShowModal;
end;

end.
